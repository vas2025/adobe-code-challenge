version: '3.8'

services:
  php:
    build:
      context: ./backend
    container_name: adobe_php
    restart: unless-stopped
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/var/www
    depends_on:
      - db
      - redis

  nginx:
    image: nginx:alpine
    container_name: adobe_nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./backend:/var/www:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php

  db:
    image: postgres:15
    container_name: adobe_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: adobe
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./backend/db/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro

  redis:
    image: redis:7-alpine
    container_name: adobe_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  composer:
    image: composer:2
    container_name: adobe_composer
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
    entrypoint: [ "composer" ]
    command: [ "--version" ]
    profiles: [ "tooling" ]
    
  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    container_name: adobe_frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - php
  
volumes:
  db_data:
  redis_data:
